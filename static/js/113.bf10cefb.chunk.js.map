{"version":3,"file":"static/js/113.bf10cefb.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Form/Form.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ListContact/ListContact.styled.js","hooks/useContactSelectors/useContactSelectors.js","redux/filter/selectors.js","hooks/useFilterSelectors/useFilterSelectors.js","components/ListContact/ListContact.jsx","components/SearchInput/SearchInput.styled.js","components/SearchInput/SearchInput.jsx","components/ThemeBtn/ThemeBtn.styled.js","components/ThemeBtn/ThemeBtn.jsx","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["const selectContacts = state => state.contacts.items;\nconst selectLoading = state => state.contacts.isLoading;\nconst selectError = state => state.contacts.error;\n\nexport {selectContacts, selectLoading, selectError};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Form, LabelForm, LabelInput, ButtonSubmit } from './Form.styled';\n\nexport default function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const SubmitForm = e => {\n    e.preventDefault();\n    let contact = {\n      name: name,\n      number: number,\n      email: email,\n    };\n    const someCopyItem = contacts.some(\n      elem => elem.name.toLowerCase() === name.toLowerCase()\n    );\n    if (someCopyItem) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact(contact));\n    DefaultValue();\n  };\n\n  const InputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const DefaultValue = () => {\n    setName('');\n    setNumber('');\n    setEmail('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={SubmitForm}>\n        <LabelForm>Name</LabelForm>\n        <LabelInput\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          onChange={InputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        ></LabelInput>\n\n        <LabelForm>Number</LabelForm>\n        <LabelInput\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          onChange={InputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></LabelInput>\n\n        <LabelForm>Email</LabelForm>\n        <LabelInput\n          value={email}\n          type=\"email\"\n          name=\"email\"\n          onChange={InputChange}\n          pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\n          title=\"Email address must contain the '@' symbol For example dmytrolevchenko22@gmail.com\"\n        ></LabelInput>\n\n        <ButtonSubmit type=\"submit\" disabled={!name || !number}>\n          Add contact\n        </ButtonSubmit>\n      </Form>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Spinner = styled.div`\n   position: fixed;\n   top: 60%;\n   left: 50%;\n   transform: translate(-50%, -50%);\n   & > svg {\n      fill: ${(props)=>props.theme.text};\n   }\n`\n\nexport {Spinner};","import { RotatingLines } from  'react-loader-spinner'\nimport { Spinner } from './Loader.styled';\n\nconst Loader = () => {\n    return (\n        <Spinner>\n  <RotatingLines\n     width=\"50\" \n     strokeColor=\"#000000\"\n     strokeWidth=\"4\"\n     visible={true} \n      />\n  </Spinner>\n    )\n}\n\nexport default Loader;","import styled, {keyframes} from 'styled-components';\n\nconst List = styled.ol`\ntext-align: start;\nmargin-bottom: 40px;\n`;\n\nconst ListItem = styled.li`\npadding: 2px 5px;\nfont-size: 10px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nmax-width: 320px;\nmargin-bottom: 5px;\n&:last-child {\n    margin-bottom: 0;\n}\n@media screen and (min-width: 768px) {\nmax-width: 600px;\nfont-size: 18px;\n}\n`\nconst Number = styled.span`\nfont-style: italic;\nmargin-left: 5px;\nfont-size: 10px;\n@media screen and (min-width: 768px) {\nfont-size: 16px;\nmargin-left: 10px;\n}\n`\nconst animCall = keyframes`\n0% {transform: rotate(0deg)};\n50% {transform: rotate(-30deg)};\n100% {transform: rotate(0deg)};\n`\nconst animDelete = keyframes`\n0% {transform: scale(1)};\n50% {transform: scale(1.1)};\n100% {transform: scale(1)};\n`\nconst CallTo = styled.a`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-left: auto;\nwidth: 20px;\nheight: 20px;\nborder: none;\ncursor: pointer;\ncolor: ${(props)=>props.theme.text};\n@media screen and (min-width: 768px) {\nwidth: 30px;\nheight: 30px;  \n}\n& > svg {\n    transition: all 0.3s;\n}\n&:hover > svg {\n    fill: green;\n    animation-name: ${animCall};\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n}\n`\nconst DeleteButton = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-left: 5px;\nbackground-color: transparent;\nborder: none;\ncolor:${(props)=>props.theme.text};\ncursor: pointer;\n& > svg {\n    transition: all 0.3s;\n}\n&:hover:not(:disabled) > svg, \n&:focus > svg, \n&:active > svg{\n    color: #9c1111;\n    animation-name: ${animDelete};\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n}\n`\nconst ItemInfo = styled.p`\ndisplay: flex;\njustify-content: space-between;\nalign-items: baseline;\nfont-size: 10px;\n@media screen and (min-width: 768px) {\nfont-size: 18px;\n}\n`\n\nexport { List, ListItem, Number, DeleteButton, ItemInfo, CallTo};","import { useSelector } from \"react-redux\";\nimport {selectLoading, selectError, selectContacts} from \"redux/contacts/selectors\";\n\nconst useContactSelectors = () => {\n    const isLoading = useSelector(selectLoading);\n    const isError = useSelector(selectError);\n    const contacts = useSelector(selectContacts);\n\n    return {\n        isLoading,\n        isError,\n        contacts,\n    };\n};\n\nexport default useContactSelectors;\n   ","const selectByFilter = state => state.filter.filter;\n\nexport {selectByFilter};","import { useSelector } from \"react-redux\";\nimport { selectByFilter } from \"redux/filter/selectors\";\n\nconst useFilterSelectors = () => {\n    const filtered = useSelector(selectByFilter);\n    return {\n        filtered,\n    };\n};\n\nexport default useFilterSelectors;","import React from 'react';\nimport {\n  List,\n  ListItem,\n  Number,\n  DeleteButton,\n  ItemInfo,\n  CallTo,\n} from './ListContact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { AiTwotoneDelete, AiOutlinePhone } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport useContactSelectors from 'hooks/useContactSelectors';\nimport useFilterSelectors from 'hooks/useFilterSelectors';\n\nconst ListContact = () => {\n  const {contacts, isLoading} = useContactSelectors();\n const {filtered} = useFilterSelectors()\n  const dispatch = useDispatch();\n\n  const onDeleteItem = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getSortContacts = () => {\n    const normalizedValue = filtered.toLowerCase().trim();\n    return contacts.filter(elem =>\n      elem.name.toLowerCase().includes(normalizedValue)\n    );\n  };\n  const sortedContacts = getSortContacts().sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  return (\n    <List>\n      {sortedContacts.length === 0\n        ? null\n        : sortedContacts.map(({ id, name, number }, index) => {\n            return (\n              <ListItem key={id}>\n                <ItemInfo>\n                  <span>{index + 1}.</span>\n                  <span>{name}:</span>\n                  <Number>{number}</Number>\n                </ItemInfo>\n\n                <IconContext.Provider value={{ size: '25px' }}>\n                  <CallTo href={`tel:${number}`}>\n                    <AiOutlinePhone />\n                  </CallTo>\n                  <DeleteButton\n                    disabled={isLoading}\n                    onClick={() => onDeleteItem(id)}\n                  >\n                    <AiTwotoneDelete />\n                  </DeleteButton>\n                </IconContext.Provider>\n              </ListItem>\n            );\n          })}\n    </List>\n  );\n};\n\nexport default ListContact;\n","import styled from 'styled-components';\n\nconst SearchContainer = styled.div`\nmax-width: 400px;\nmargin: 0;\nmargin-bottom: 40px;\ntext-align: start;\n`\nconst LabelSearch = styled.p`\nfont-size: 22px;\nmargin-bottom: 5px;\n`\nconst InputSearch = styled.input`\nborder: none;\noutline: none;\nborder-radius: 4px;\ncolor: ${(props)=>props.theme.text};\nbackground-color: ${(props)=>props.theme.input};\npadding: 6px;\nmin-width: 200px;\n`\n\nexport {LabelSearch, InputSearch, SearchContainer};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport {\n  LabelSearch,\n  InputSearch,\n  SearchContainer,\n} from './SearchInput.styled';\nimport { selectByFilter } from 'redux/filter/selectors';\n\nconst SearchInput = () => {\n  const filter = useSelector(selectByFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <SearchContainer>\n        <LabelSearch>Find contacts by name</LabelSearch>\n        <InputSearch\n          value={filter}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"enter for search\"\n          onChange={onChangeFilter}\n        ></InputSearch>\n      </SearchContainer>\n    </>\n  );\n};\n\nexport default SearchInput;\n","import styled from 'styled-components';\n\nconst Toggle = styled.label` \n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 25px;\n  margin: 0 0.25rem;\n  & > input[type=\"checkbox\"] {\n    display: none;\n    &:checked + span::before {\n      transform: translateX(25px);\n      background-color: ${(props) => props.theme.input};\n    }\n    &:checked + span {\n      background-color: ${(props) => props.theme.main}f;\n    }\n  }\n  & > span {\n  position: absolute;\n  cursor: pointer;\n  background-color: ${(props) => props.theme.main};\n  border-radius: 25px;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  transition: background-color 0.2s ease;\n  &::before {\n  position: absolute;\n  content: \"\";\n  left: 2px;\n  top: 2px;\n  width: 21px;\n  height: 21px;\n  background-color: ${(props) => props.theme.input};\n  border-radius: 50%;\n  transition: transform 0.3s ease;\n  }\n  }\n`\nconst ThemeSwitch = styled.div`\ndisplay: flex;\nalign-items: center;\n`\n\nexport { Toggle, ThemeSwitch};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { Toggle, ThemeSwitch } from './ThemeBtn.styled';\nimport { HiOutlineSun, HiOutlineMoon } from 'react-icons/hi';\nimport { IconContext } from 'react-icons';\n\nconst ThemeBtn = () => {\n  const thm = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const choseTheme = () => {\n    dispatch(setTheme());\n  };\n\n  return (\n    <>\n      <ThemeSwitch>\n        <IconContext.Provider value={{ size: '25px' }}>\n          <HiOutlineSun />\n          <Toggle>\n            <input type=\"checkbox\" checked={thm} onChange={choseTheme} />\n            <span />\n          </Toggle>\n          <HiOutlineMoon />\n        </IconContext.Provider>\n      </ThemeSwitch>\n    </>\n  );\n};\nexport default ThemeBtn;\n","import Form from \"components/Form\";\nimport Loader from \"components/Loader\";\nimport ListContact from \"components/ListContact\";\nimport SearchInput from \"components/SearchInput\";\nimport { ContainerList, ListTitle, ListIsEmpty } from \"components/App/App.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport useAuth from \"hooks/useAuth\";\nimport useSelectors from 'hooks/useContactSelectors';\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { Heading, FormTitle} from \"components/App/App.styled\";\nimport ThemeBtn from \"components/ThemeBtn\";\n\nconst Phonebook = () => {\n    const {isLoading, isError} = useSelectors();\n    const {isLoggedIn} = useAuth();\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n    dispatch(fetchContacts());\n   },[dispatch]);\n\n   return (\n    <>\n    {isLoggedIn ? (\n    <>\n    <Heading>\n            <FormTitle>Phonebook</FormTitle>\n            <ThemeBtn />\n    </Heading>\n    <Form/>\n    <ContainerList>\n            <ListTitle>Contacts</ListTitle>\n            {fetchContacts().length > 0 ? (\n              <SearchInput></SearchInput>\n            ) : (\n              <ListIsEmpty>\n                Your list is empty... Please add a new contact\n              </ListIsEmpty>\n            )}\n            {isLoading && !isError && <Loader />}\n            {isError && <div style={{ color: 'red' }}>loading error!</div>}\n            <ListContact></ListContact>\n          </ContainerList>\n          </>) : (<>please login</>)}\n    \n    </>\n    \n   )\n}\nexport default Phonebook;"],"names":["selectContacts","state","contacts","items","selectLoading","isLoading","selectError","error","ContactsForm","useState","name","setName","number","setNumber","email","setEmail","useSelector","dispatch","useDispatch","InputChange","e","currentTarget","value","DefaultValue","onSubmit","preventDefault","contact","some","elem","toLowerCase","alert","addContact","type","onChange","pattern","title","required","disabled","Spinner","styled","props","theme","text","width","strokeColor","strokeWidth","visible","List","ListItem","Number","animCall","keyframes","animDelete","CallTo","DeleteButton","ItemInfo","isError","selectByFilter","filter","filtered","useContactSelectors","useFilterSelectors","sortedContacts","normalizedValue","trim","includes","getSortContacts","sort","a","b","localeCompare","length","map","index","id","size","href","onClick","deleteContact","onDeleteItem","SearchContainer","LabelSearch","InputSearch","input","placeholder","setFilter","target","Toggle","main","ThemeSwitch","thm","selectTheme","checked","setTheme","useSelectors","isLoggedIn","useAuth","useEffect","fetchContacts","style","color"],"sourceRoot":""}